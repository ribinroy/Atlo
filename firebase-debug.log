[debug] [2020-11-09T18:19:18.132Z] ----------------------------------------------------------------------
[debug] [2020-11-09T18:19:18.135Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\ribin\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2020-11-09T18:19:18.135Z] CLI Version:   8.15.1
[debug] [2020-11-09T18:19:18.135Z] Platform:      win32
[debug] [2020-11-09T18:19:18.135Z] Node Version:  v12.18.3
[debug] [2020-11-09T18:19:18.138Z] Time:          Mon Nov 09 2020 23:49:18 GMT+0530 (India Standard Time)
[debug] [2020-11-09T18:19:18.139Z] ----------------------------------------------------------------------
[debug] [2020-11-09T18:19:18.139Z] 
[debug] [2020-11-09T18:19:18.147Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-11-09T18:19:18.148Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  F:\####FreeLance\Atlo\Front End Admin\atlo

Before we get started, keep in mind:

  * You are initializing in an existing Firebase project directory

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[info] i  .firebaserc already has a default project, using officelogin-52977. 
[debug] [2020-11-09T18:19:36.970Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/officelogin-52977  
 
[debug] [2020-11-09T18:19:37.499Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 18:19:37 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[info] Skipping overwrite of Database Rules.
[info] The rules defined in database.rules.json will be published when you do firebase deploy.
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2020-11-09T18:19:40.209Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-11-09T18:19:40.209Z] > authorizing via signed-in user
[debug] [2020-11-09T18:19:40.210Z] [iam] checking project officelogin-52977 for permissions ["firebase.projects.get"]
[debug] [2020-11-09T18:19:40.215Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/officelogin-52977:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-11-09T18:19:41.846Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 18:19:41 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1370","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T18:19:41.848Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/officelogin-52977/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2020-11-09T18:19:41.849Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/officelogin-52977/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2020-11-09T18:19:43.612Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 18:19:43 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-09T18:19:43.666Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 09 Nov 2020 18:19:43 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] +  Wrote functions/package.json 
[info] +  Wrote functions/index.js 
[info] +  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2020-11-09T18:20:07.664Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2020-11-09T18:20:07.847Z] <<< HTTP RESPONSE 200 {"accept-ranges":"bytes","vary":"Accept-Encoding, Origin","content-type":"application/json","cross-origin-resource-policy":"cross-origin","content-length":"1411","date":"Mon, 09 Nov 2020 18:05:44 GMT","expires":"Mon, 09 Nov 2020 18:55:44 GMT","last-modified":"Thu, 05 Nov 2020 20:31:07 GMT","x-content-type-options":"nosniff","server":"sffe","x-xss-protection":"0","cache-control":"public, max-age=3000","age":"863","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""}
[info] i  Skipping write of public/index.html 
[info] 
=== Storage Setup
[info] 
[info] Firebase Storage Security Rules allow you to define how and when to allow
[info] uploads and downloads. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
=== Emulators Setup
[info] i  database: downloading firebase-database-emulator-v4.7.1.jar... {"metadata":{"emulator":{"name":"database"},"message":"downloading firebase-database-emulator-v4.7.1.jar..."}}
[info] i  ui: downloading ui-v1.2.2.zip... {"metadata":{"emulator":{"name":"ui"},"message":"downloading ui-v1.2.2.zip..."}}
[info] 
=== Remoteconfig Setup
